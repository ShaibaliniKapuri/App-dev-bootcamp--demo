openapi: 3.0.0
info:
  title: Blog API
  description: API for managing blog posts and comments
  version: 1.0.0
servers:
  - url: http://localhost:5000
    description: Local development server
paths:
  /api/posts:
    get:
      summary: Get all posts
      description: Returns a list of all blog posts with their comments
      responses:
        '200':
          description: A list of posts
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Post'
    post:
      summary: Create a new post
      description: Creates a new blog post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostInput'
      responses:
        '201':
          description: Post created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Post created successfully
                  id:
                    type: integer
                    example: 1
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User not found
  /api/comments:
    get:
      summary: Get all comments
      description: Returns a list of all comments
      responses:
        '200':
          description: A list of comments
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Comment'
    post:
      summary: Create a new comment
      description: Creates a new comment on a post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentInput'
      responses:
        '201':
          description: Comment created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Comment created successfully
                  id:
                    type: integer
                    example: 1
        '404':
          description: User or Post not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User or Post not found
components:
  schemas:
    Post:
      type: object
      properties:
        id:
          type: integer
          example: 1
        title:
          type: string
          example: My First Blog Post
        content:
          type: string
          example: This is the content of my first blog post.
        author:
          type: string
          example: john_doe
        comments:
          type: array
          items:
            $ref: '#/components/schemas/Comment'
    Comment:
      type: object
      properties:
        id:
          type: integer
          example: 1
        content:
          type: string
          example: Great post!
        author:
          type: string
          example: jane_doe
        post_id:
          type: integer
          example: 1
        timestamp:
          type: string
          format: date-time
          example: "2023-01-01T12:00:00Z"
    PostInput:
      type: object
      required:
        - title
        - content
        - user_id
      properties:
        title:
          type: string
          example: My First Blog Post
        content:
          type: string
          example: This is the content of my first blog post.
        user_id:
          type: integer
          example: 1
    CommentInput:
      type: object
      required:
        - content
        - user_id
        - post_id
      properties:
        content:
          type: string
          example: Great post!
        user_id:
          type: integer
          example: 2
        post_id:
          type: integer
          example: 1